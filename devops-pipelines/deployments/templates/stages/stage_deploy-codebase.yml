---
parameters:
  - name: buildAgentName
    type: string
  - name: targetBuild
    type: string
  - name: targetLabel
    type: string
  - name: targetSuffix
    type: string
  - name: statusCheckRetries
    type: string
  - name: statusCheckDelaySeconds
    type: string
  - name: statusCheckTimeoutSeconds
    type: string
  - name: azureSubscription
    type: string

stages:
  - stage: Deploy_${{ parameters.targetLabel }}
    pool:
      name: ${{ parameters.buildAgentName }}
    displayName: ${{ parameters.targetLabel }} > Deploy
    condition: succeeded()
    dependsOn: Apply_${{ parameters.targetLabel }}
    jobs:
      - job: Deploy_API
        displayName: Deploy API
        condition: succeeded()
        steps:
          - template: jobs/tasks/task_deploy-api.yml
            parameters:
              targetBuild: ${{ parameters.targetBuild }}
              targetLabel: ${{ parameters.targetLabel }}
              targetName: "API Deployment"
              targetSuffix: ${{ parameters.targetSuffix }}
              azureSubscription: ${{ parameters.azureSubscription }}

      - job: Deploy_Mock
        condition: succeeded()
        steps:
          - template: jobs/tasks/task_deploy-mock.yml
            parameters:
              targetBuild: ${{ parameters.targetBuild }}
              azureSubscription: ${{ parameters.azureSubscription }}
              targetSuffix: ${{ parameters.targetSuffix }}
              statusCheckRetries: ${{ parameters.statusCheckRetries }}
              statusCheckDelaySeconds: ${{ parameters.statusCheckDelaySeconds }}
              statusCheckTimeoutSeconds: ${{ parameters.statusCheckTimeoutSeconds }}

      #- job: Deploy_UI
      #  displayName: Deploy UI
      #  condition: succeeded()
      #  steps:
      #    - template: jobs/tasks/task_deploy-ui.yml
      #      parameters:
      #        targetBuild: ${{ parameters.targetBuild }}
      #        targetLabel: ${{ parameters.targetLabel }}
      #        targetName: "SPA Deployment"
      #        targetSuffix: ${{ parameters.targetSuffix }}
      #        azureSubscription: ${{ parameters.azureSubscription }}
